#!perl
use v5.24.0;
use warnings;
use utf8;

use charnames qw( :full );
use experimental qw(lexical_subs signatures);

use DateTime;

use Getopt::Long::Descriptive;
use JSON::MaybeXS;

use Synergy::Rototron;

binmode *STDOUT, 'encoding(:utf-8)';

my ($opt, $desc) = describe_options(
  '%c %o',
  [ 'config|c=s', 'config file path',     { default => 'rototron.json' } ],
  [ 'debug|d',    'print more stuff',                                    ],
  [ 'really|r',   'really make changes',                                 ],
);

my $rototron = Synergy::Rototron->new({
  config_path => $opt->config,
});

# We want to populate out 90d, plus enough days to get us to a Friday.
my $start = DateTime->today;
my $days  = 90 + 6 - $start->day_of_week % 7;
my $end   = $start->clone->add(days => $days);

my $plan = $rototron->recompute_rotors($start, $end);

if ($opt->debug) {
  print JSON::MaybeXS->new->pretty->canonical->encode($plan);
}

if ($opt->really) {
  my $res = $rototron->jmap_client->request({
    using       => [ 'urn:ietf:params:jmap:mail' ],
    methodCalls => [
      [ 'CalendarEvent/set' => $plan, ],
    ],
  });

  $res->assert_successful;

  if ($opt->debug) {
    print JSON::MaybeXS->new->pretty->canonical->encode(
      $res->sentence_named('CalendarEvent/set')->as_stripped_pair,
    );
  }
}

